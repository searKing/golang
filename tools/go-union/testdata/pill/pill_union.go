// Code generated by "go-union -type Pill"; DO NOT EDIT.
// Install go-union by \"go get install github.com/searKing/golang/tools/go-union\"

package main

import "reflect"

// Union switch on the variant.
func (u Pill[T]) Union() any {
	if reflect.ValueOf(u.AliasStruct).IsZero() {
		return u.AliasStruct
	}
	{
		var z string
		if u.Name != z {
			return u.Name
		}
	}
	{
		var z int
		if u.Age != z {
			return u.Age
		}
	}
	if reflect.ValueOf(u.NameAlias).IsZero() {
		return u.NameAlias
	}
	if reflect.ValueOf(u.genericFuncType).IsZero() {
		return u.genericFuncType
	}
	if reflect.ValueOf(u.genericStructType).IsZero() {
		return u.genericStructType
	}
	if reflect.ValueOf(u.genericEmptyStructType).IsZero() {
		return u.genericEmptyStructType
	}
	if u.pointerType != nil {
		return u.pointerType
	}
	if reflect.ValueOf(u.structType).IsZero() {
		return u.structType
	}
	{
		var z [5]T
		if u.arrayType != z {
			return u.arrayType
		}
	}
	if u.funcType != nil {
		return u.funcType
	}
	if u.chanType != nil {
		return u.chanType
	}
	{
		var z any
		if u.interfaceType != z {
			return u.interfaceType
		}
	}
	{
		var z string
		if u.stringType != z {
			return u.stringType
		}
	}
	if u.mapType != nil {
		return u.mapType
	}
	if u.indentSliceType != nil {
		return u.indentSliceType
	}
	if u.selectorSliceType != nil {
		return u.selectorSliceType
	}
	if u.starSelectorSliceType != nil {
		return u.starSelectorSliceType
	}
	return nil
}
