// Code generated by "{{.GoUnionToolName}} {{.GoUnionToolArgsJoined}}"; DO NOT EDIT.
// Install {{.GoUnionToolName}} by \"go get install github.com/searKing/golang/tools/{{.GoUnionToolName}}\"
{{ $package_scope := . }}

package {{.PackageName}}

{{range $path := .ImportPaths}}
    import {{$path}}
{{end}}

{{- if .ApplyUnionsAsMemberFunction }}
    // Union switch on the variant.
    func (u {{.TargetTypeName}}{{.TargetTypeGenericParams}}) Union() any {
    {{- range .Fields}}
        {{- if .FieldCanBeCompareWithNil}}
            if u.{{.FieldName}} !=nil {
            return u.{{.FieldName}}
            }
        {{- else if .FieldCanBeCompareWithZero}}
            {
            var z {{.FieldType}}
            if u.{{.FieldName}} !=z {
            return u.{{.FieldName}}
            }
            }
        {{- else}}
            if reflect.ValueOf(u.{{.FieldName}}).IsZero(){
            return u.{{.FieldName}}
            }
        {{- end}}
    {{- end}}
    return nil
    }
{{- else}}
    // {{.FormatTypeName}}Union switch on the variant.
    func {{.FormatTypeName}}Union{{.TargetTypeGenericDeclaration}}(u {{.TargetTypeName}}{{.TargetTypeGenericParams}})any {
    {{- range .Fields}}
        {{- if .FieldCanBeCompareWithNil}}
            if u.{{.FieldName}} !=nil {
            return u.{{.FieldName}}
            }
        {{- else if .FieldCanBeCompareWithZero}}
            {
            var z {{.FieldType}}
            if u.{{.FieldName}} !=z {
            return u.{{.FieldName}}
            }
            }
        {{- else}}
            if reflect.ValueOf(u.{{.FieldName}}).IsZero(){
            return u.{{.FieldName}}
            }
        {{- end}}
    {{- end}}
    return nil
    }
{{- end}}