// Code generated by "go-option -type=Gateway"; DO NOT EDIT.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package grpc

// A GatewayOption sets options.
type GatewayOption interface {
	apply(*Gateway)
}

// EmptyGatewayOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyGatewayOption struct{}

func (EmptyGatewayOption) apply(*Gateway) {}

// GatewayOptionFunc wraps a function that modifies Gateway into an
// implementation of the GatewayOption interface.
type GatewayOptionFunc func(*Gateway)

func (f GatewayOptionFunc) apply(do *Gateway) {
	f(do)
}

// ApplyOptions call apply() for all options one by one
func (gw *Gateway) ApplyOptions(options ...GatewayOption) *Gateway {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(gw)
	}
	return gw
}

// WithGateway sets Gateway.
func WithGateway(v Gateway) GatewayOption {
	return GatewayOptionFunc(func(o *Gateway) {
		*o = v
	})
}

// sample code for option, default for nothing to change
func _GatewayOptionWithDefault() GatewayOption {
	return GatewayOptionFunc(func(*Gateway) {
		// nothing to change
	})
}
